{"version":3,"file":"static/js/398.611bfc5e.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/AddContact/AddContact.jsx","components/Contacts/Contacts.jsx","components/FilterIn/FilterIn.jsx","components/ContactForm/ContactForm.jsx","hooks/useContacts.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getStatusFilter = state => state.filters.status;\n\nexport const selectContacts = createSelector(\n    [getContacts, getStatusFilter],\n    // Функція перетворювач\n    (contacts, filter) => {\n      return contacts.filter(element =>\n        element.name.toUpperCase().includes(filter.toUpperCase())\n      );\n    }\n  );","\n//MUI\nimport { Button, Box, TextField } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\n\n\nimport { useDispatch, useSelector} from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors'\nimport swal from 'sweetalert';\n \nconst AddContact = () => {\n  const contacts = useSelector(getContacts);\n  const dispatcher = useDispatch();\n  const findContactByName = (contacts, userName) => {\n    const textFilter = userName.toUpperCase();\n    return contacts.find(element => element.name.toUpperCase() === textFilter);\n  };\n  \n  const addnewContact = (contacts, newContact) => {\n    if (findContactByName(contacts, newContact.name)) {\n      swal(`${newContact.name} is already in contacts`);\n      return;\n    }\n\n    dispatcher(addContact(newContact));\n\n    return true;\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const newContact = {\n      name: form.elements.name.value,\n      number: form.elements.phone.value,\n    };\n    \n    addnewContact(contacts, newContact) && form.reset();\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        \n        sx={{\n          mt: 1,\n          maxWidth: 480,\n        }}\n      >\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          inputProps={{\n            inputMode: 'text',\n            pattern:\n              \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n          }}\n          id=\"name\"\n          label=\"User name\"\n          name=\"name\"\n          autoComplete=\"name\"\n          autoFocus\n       \n        />\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          inputProps={{\n            inputMode: 'text',\n            pattern: String.raw`\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}`,\n          }}\n          name=\"phone\"\n          label=\"Phone number\"\n          type=\"phone\"\n          id=\"phone\"\n     \n        />\n        <Box\n          m={1}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        \n        >\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            sx={{\n              mt: 3,\n              mb: 2,\n              maxWidth: 240,\n            }}\n          >\n            Add new contact\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default AddContact;","\nimport PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\n\n//mui\nimport { IconButton,TableCell, TableRow} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n;\n\nconst Contact = ({ contact }) => {\n  const dispatcher = useDispatch();\n\n  const handlerDelete = () => dispatcher(deleteContact(contact.id));\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        {contact.name}\n      </TableCell>\n\n      <TableCell align=\"left\">{contact.number}</TableCell>\n\n      <TableCell align=\"left\">\n        <IconButton aria-label=\"delete\" color=\"primary\" onClick={handlerDelete}>\n          <DeleteIcon />\n        </IconButton>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nContact.propType = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    edit: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default Contact;","import { useDispatch } from 'react-redux';\nimport { changeFilter, changeFilterNumber } from '../../redux/filter/filterSlice';\n\nimport { TextField, TableCell, TableRow} from '@mui/material';\n\n\nconst FilterIn = () => {\n  const dispatcher = useDispatch();\n\n  const handlerChangeFilter = event => {\n    dispatcher(changeFilter(event.currentTarget.value));\n  };\n\n  const handlerChangeFilterNumber = event => {\n    dispatcher(changeFilterNumber(event.currentTarget.value));\n  };\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <TextField\n          type=\"search\"\n          name=\"filter\"\n          variant=\"standard\"\n          fullWidth\n          label=\"Find by name\"\n          onChange={handlerChangeFilter}\n        />\n      </TableCell>\n\n      <TableCell align=\"left\">\n        <TextField\n          type=\"search\"\n          name=\"filter\"\n          variant=\"standard\"\n          fullWidth\n          label=\"Find by number\"\n          onChange={handlerChangeFilterNumber}\n        />\n      </TableCell>\n\n      <TableCell align=\"left\"></TableCell>\n\n      <TableCell align=\"left\"></TableCell>\n    </TableRow>\n  );\n};\n\nexport default FilterIn;","\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport Contact from 'components/Contacts/Contacts';\n\nimport FilterIn from '../FilterIn/FilterIn';\n//MUI\nimport {\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Paper,\n} from '@mui/material';\n\n\n\nconst ContactForm = () => {\n  const visibleContacts = useSelector(getContacts);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ maxWidth: 480 }} aria-label=\"customized table\">\n        {/* <Table aria-label=\"customized table\"> */}\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"left\">Phone</TableCell>\n            <TableCell align=\"right\"></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <FilterIn />\n          {visibleContacts.map(contact => (\n            <Contact key={contact.id} contact={contact} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector } from 'react-redux';\nimport {\n    getContacts,\n    getIsLoading,\n    getError,\n} from '../redux/contacts/selectors';\nconst useContacts = () => {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  return { contacts, isLoading, error };\n};\n\nexport default useContacts;","import { useDispatch } from 'react-redux';\nimport AddContact from 'components/AddContact/AddContact';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport useContacts from 'hooks/useContacts';\n\n//MUI\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nconst Contacts = () => {\n  const { contacts } = useContacts();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      sx={{\n        padding: 2,\n      }}\n    >\n      <Typography variant=\"h3\">Phonebook</Typography>\n\n      <AddContact/>\n\n      {contacts.length > 0 && (\n        <>\n          <Typography variant=\"h4\">Contacts</Typography>\n\n\n          <ContactForm />\n        </>\n      )}\n\n    </Box>\n  );\n};\n\nexport default Contacts;"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","createSelector","filters","status","filter","element","name","toUpperCase","includes","useSelector","dispatcher","useDispatch","Box","component","onSubmit","event","preventDefault","form","target","newContact","elements","value","number","phone","userName","textFilter","find","findContactByName","addContact","swal","addnewContact","reset","sx","mt","maxWidth","TextField","margin","required","fullWidth","inputProps","inputMode","pattern","id","label","autoComplete","autoFocus","String","raw","type","m","display","justifyContent","alignItems","Button","variant","startIcon","Add","mb","Contact","contact","TableRow","TableCell","scope","align","IconButton","color","onClick","deleteContact","Delete","propType","PropTypes","edit","isRequired","onChange","changeFilter","currentTarget","changeFilterNumber","visibleContacts","TableContainer","Paper","Table","TableHead","TableBody","map","useContacts","dispatch","useEffect","fetchContacts","padding","Typography","length"],"sourceRoot":""}